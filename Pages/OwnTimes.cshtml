@page
@model OwnTimesPageModel
@{ ViewData["Title"] = "Eigene Zeiten"; }
<script>
  /*writeOwnAbsences();
  writeOwnOvertimes();*/
</script>
<div id="OwnTimes">
  <h1>Eigene Zeiten</h1>

  <a class="btn modal-trigger" href="#absenceWindow">Neue Abwesenheit</a>
  <a class="btn modal-trigger" href="#overtimeWindow">Neue Überzeit</a>
  @{ 
    if(User.IsInRole("Advanced") || User.IsInRole("High"))
    {
      <select id="userDropdown" class="right" style="width: fit-content;">
        @{ 
          using (var db = new DatabaseContext()) {
            var userList = (from u in db.User select u).ToList();
            foreach (var item in userList)
            {
              <option><a href="?user=@item.ID">@item.Username</a></option>
            }
          }
        }
      </select>
    }
  }

  <!-- AbsenceWindow -->
  <partial name="/Pages/OwnTimes/_AbsencePartial.cshtml" />
  <!-- OvertimeWindow -->
  <partial name="/Pages/OwnTimes/_OvertimePartial.cshtml" />

  <!-- AbsenceGrid -->
  <h4>Abwesenheiten</h4>
  <div class="table-container responsive-table">
    <table>
      <thead>
        <tr>
          <th>Von</th>
          <th>Bis</th>
          <th>Grund</th>
          <th>Ist I.O.</th>
          <th>Bearbeiten</th>
        </tr>
      </thead>
      <tbody style="--height: 15vh">
        @{
          List<Model.AbsenceModel> absences;
          using (var db = new DatabaseContext())
          {
            absences = (from a in db.Absence
                        where (a.IdUser == new Guid(User.FindFirst(ClaimTypes.NameIdentifier).Value)) && ((a.CreatedOn - DateTime.Now).TotalDays < 30)
                        orderby a.AbsentFrom
                        select a).ToList();
          }
          foreach (var item in absences)
          {
            <tr>
              <td>@item.AbsentFrom</td>
              <td>@item.AbsentTo</td>
              <td>@item.Reason</td>
              <td>
                <label>
                  @if (item.Approved)
                  {
                    <input type="checkbox" class="filled-in" checked disabled />
                  } else
                  {
                    <input type="checkbox" class="filled-in" disabled />
                  }
                  <span></span>
                </label>
              </td>
              <td>
                <button type="button" class="btn-small" onclick="absenceEdit('@item.ID')">
                  <i class="material-icons">edit</i>
                </button>
                <button type="button" class="btn-small" onclick="absenceDelete('@item.ID')">
                  <i class="material-icons">delete</i>
                </button>
              </td>
            </tr>
          }
        }
      </tbody>
    </table>
  </div>
  <!-- OvertimeGrid -->
  <h4>Überzeiten</h4>
  <div class="table-container responsive-table">
    <table>
      <thead>
        <tr>
          <th>Datum</th>
          <th>Kunde</th>
          <th>Std.</th>
          <th>Zuschlag</th>
          <th>Bearbeiten</th>
        </tr>
      </thead>
      <tbody style="--height: 15vh">
        @{
          List<dynamic> overtimes;
          using (var db = new DatabaseContext())
          {
            overtimes = (from o in db.Overtime
                         join od in db.OvertimeDetail on o.IdOvertimeDetail equals od.ID
                         where (o.IdUser == new Guid(User.FindFirst(ClaimTypes.NameIdentifier).Value)) && ((o.CreatedOn - DateTime.Now).TotalDays < 30)
                         orderby o.Date
                         select new
                         {
                           o,
                           od
                         }
                         ).ToList<dynamic>();
          }
          foreach (var item in overtimes)
          {
            <tr>
              <td>@item.o.Date</td>
              <td>@item.o.Customer</td>
              <td>@item.o.Hours</td>
              <td>@item.od.Rate</td>
              <td>
                <button type="button" class="btn-small" onclick="overtimeEdit('@item.o.ID')">
                  <i class="material-icons">edit</i>
                </button>
                <button type="button" class="btn-small" onclick="overtimeDelete('@item.o.ID')">
                  <i class="material-icons">delete</i>
                </button>
              </td>
            </tr>
          }
        }
      </tbody>
    </table>
  </div>
</div>